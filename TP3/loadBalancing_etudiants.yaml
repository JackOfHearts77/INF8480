heat_template_version: 2014-10-16

description: A template to deploy a load balanced web server

parameters:

  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair

  flavor:
    type: string
    description: Flavor for the server to be created
    default: 2048-10-1-1
    constraints:
      - custom_constraint: nova.flavor

  image:
    type: string
    description: Image ID or image name to use for the server
    default: xenial-server-cloudimg-amd64-disk1
    constraints:
      - custom_constraint: glance.image

  private_net:
    type: string
    description: Sous-reseau dans lequel le load balancer sera situe
    default: switch1-nat
    constraints:
      - { custom_constraint: neutron.network }

  server_py:
    type: string
    description: Name of the python server
    default: https://raw.githubusercontent.com/houssemmh/INF8480-TP3/master/server.py

  port:
    type: number
    description: Port used by the load balancer
    default: 80

  subnet_id:
    type: string
    description: id du subnet où se trouve le lb
    default: 4ba321db-9247-454b-9274-faad8ec76461

  public_net:
    type: string
    description: ID of public network for which floating IP addresses will be allocated
    constraints:
      - {custom_constraint: neutron.network}


resources:

  server_nodes:
      type: OS::Heat::ResourceGroup
      properties:
        count: 3
        resource_def:
          type: OS::Nova::Server
          properties:
            key_name: { get_param: key_name }
            image: { get_param: image }
            flavor: { get_param: flavor }
            networks:
              - network: { get_param: private_net }
            user_data_format: RAW
            user_data:
              str_replace:
                template: |
                  #!/bin/bash
                  sudo apt-get update
                  sudo apt install python --assume-yes
                  wget https://raw.githubusercontent.com/houssemmh/INF8480-TP3/master/server.py
                  python server.py &
                params:
                  param1: ''


  mypool:
    type: OS::Neutron::LBaaS::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: HTTP
      listener: { get_resource: listener }
      loadbalancer: { get_resource: myloadbalancer }


  listener:
    type: OS::Neutron::LBaaS::Listener
    properties:
      loadbalancer: { get_resource: myloadbalancer }
      protocol: HTTP
      protocol_port: { get_param: port }

  myloadbalancer:
      type: OS::Neutron::LBaaS::LoadBalancer
      properties:
        vip_subnet: { get_param: subnet_id }

  mymonitor:
      type: OS::Neutron::LBaaS::HealthMonitor
      properties:
        delay: 15
        max_retries: 1 # si on fail la seconde fois alors on déclare la machine inactive
        timeout: 5
        type: HTTP
        pool: { get_resource: mypool }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

  association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_attr: [myloadbalancer, vip_port_id] }


outputs:
#  pool_ip_address:
#    value: {get_attr: [myloadbalancer, vip, address]}
#    description: The IP address of the load balancing pool
